<!DOCTYPE html>
<html>
  <head>
    <title>Chat Room</title>
    <style>
      #messages {
        height: 300px;
        border: 1px solid #ccc;
        overflow: auto;
      }
    </style>
  </head>
  <body>
    <h1>Room: <%= roomId %></h1>
    <div id="messages"></div>
    <form id="messageForm">
      <input id="messageInput" autocomplete="off" />
      <input type="file" id="fileInput" />
      <button>Send</button>
    </form>
    <button
      id="endRoomButton"
      style="
        display: none;
        background-color: #4caf50;
        color: white;
        margin-top: 20px;
      "
    >
      End Room
    </button>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      // Join the room
      socket.emit("join room", "<%= roomId %>");

      // Listen for chat messages
      socket.on("chat message", (username, msg, fileUrl) => {
        const item = document.createElement("li");
        item.textContent = `${username}: ${msg}`;
        if (fileUrl) {
          const fileElement = document.createElement(
            fileUrl.endsWith(".mp4") ? "video" : "img"
          );
          fileElement.src = fileUrl;
          console.log("video is  " + fileUrl);
          if (fileUrl.endsWith(".mp4")) {
            fileElement.controls = true; // add controls to the video
            fileElement.type = "video/mp4"; // specify the MIME type
          }
          item.appendChild(fileElement);
        }
        const messages = document.getElementById("messages");
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });

      // Send a chat message
      document.getElementById("messageForm").addEventListener("submit", (e) => {
        e.preventDefault();
        const messageInput = document.getElementById("messageInput");
        const fileInput = document.getElementById("fileInput");
        const file = fileInput.files[0];
        if (file) {
          const formData = new FormData();
          formData.append("file", file);
          fetch("/upload", {
            method: "POST",
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              socket.emit(
                "chat message",
                "<%= roomId %>",
                messageInput.value,
                data.fileUrl
              );
            });
        } else {
          socket.emit("chat message", "<%= roomId %>", messageInput.value);
        }
        messageInput.value = "";
        fileInput.value = "";
      });

      socket.on("admin", (isAdmin) => {
        const endRoomButton = document.getElementById("endRoomButton");
        if (isAdmin) {
          endRoomButton.style.display = "block"; // show the "End Room" button
        } else {
          endRoomButton.style.display = "none"; // hide the "End Room" button
        }
      });

      socket.on("user connected", (username) => {
        const item = document.createElement("li");
        item.textContent = `${username} has joined the room`;
        const messages = document.getElementById("messages");
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });

      // Listen for user disconnected
      socket.on("user disconnected", (username) => {
        const item = document.createElement("li");
        item.textContent = `${username} has left the room`;
        const messages = document.getElementById("messages");
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });

      // Listen for user count
      socket.on("user count", (count) => {
        const item = document.createElement("li");
        item.textContent = `There are now ${count} users in the room`;
        const messages = document.getElementById("messages");
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });

      document.getElementById("endRoomButton").addEventListener("click", () => {
        socket.emit("end room", "<%= roomId %>"); // emit an "end room" event
      });

      socket.on("room ended", () => {
        alert("Room has been ended by the admin");
        window.location.href = "/"; // redirect to the home page
      });
    </script>
  </body>
</html>
